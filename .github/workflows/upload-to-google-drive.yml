name: Upload to Google Drive

on:
  push:
    branches:
      - main

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client requests

      - name: Decode and Save client_secret.json
        run: |
          echo "${{ secrets.GOOGLE_CLIENT_SECRET_BASE64 }}" | base64 --decode > client_secret.json

      - name: Upload File to Google Drive
        env:
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          FILE_NAME: "example.apk" # Hier den Namen der Datei setzen, die hochgeladen werden soll
        run: |
          import os
          import json
          import requests

          # Google API Credentials
          CLIENT_ID = os.getenv("GOOGLE_CLIENT_ID")
          CLIENT_SECRET = os.getenv("GOOGLE_CLIENT_SECRET")
          REFRESH_TOKEN = os.getenv("GOOGLE_REFRESH_TOKEN")

          # Datei zum Hochladen
          FILE_PATH = os.getenv("FILE_NAME")
          MIME_TYPE = "application/vnd.android.package-archive"  # MIME-Type für APK-Dateien
          FOLDER_ID = os.getenv("GOOGLE_DRIVE_FOLDER_ID")

          def get_access_token():
              """Erhalte ein neues Access Token mit dem Refresh Token."""
              token_url = "https://oauth2.googleapis.com/token"
              data = {
                  "client_id": CLIENT_ID,
                  "client_secret": CLIENT_SECRET,
                  "refresh_token": REFRESH_TOKEN,
                  "grant_type": "refresh_token"
              }
              response = requests.post(token_url, data=data)
              response_data = response.json()
              if "access_token" in response_data:
                  return response_data["access_token"]
              else:
                  print("❌ Fehler beim Abrufen des Access Tokens:", response_data)
                  exit(1)

          def upload_to_drive():
              """Lädt eine Datei zu Google Drive hoch."""
              access_token = get_access_token()
              headers = {"Authorization": f"Bearer {access_token}"}

              # Metadaten für die Datei
              metadata = {
                  "name": os.path.basename(FILE_PATH),
                  "mimeType": MIME_TYPE
              }
              if FOLDER_ID:
                  metadata["parents"] = [FOLDER_ID]

              files = {
                  "metadata": (None, json.dumps(metadata), "application/json"),
                  "file": (os.path.basename(FILE_PATH), open(FILE_PATH, "rb"), MIME_TYPE)
              }

              upload_url = "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"
              response = requests.post(upload_url, headers=headers, files=files)

              if response.status_code == 200:
                  print("✅ Datei erfolgreich hochgeladen:", response.json().get("id"))
              else:
                  print("❌ Fehler beim Hochladen:", response.text)
                  exit(1)

          if __name__ == "__main__":
              upload_to_drive()
